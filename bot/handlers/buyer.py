
# –ü–æ–ª–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import ReplyKeyboardBuilder as Rkb

# –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
from utils.buyer_lexicon import *

# –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start (–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)
@router.message(CommandStart())
async def start(msg: Message):
    await main_menu.send_msg(msg)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ï–¥–∞ –Ω–∞ –∑–∞–∫–∞–∑"
@router.callback_query(F.data == "food")
async def food(call: CallbackQuery):
    await call.message.answer("–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª <b>–ï–¥–∞ –Ω–∞ –∑–∞–∫–∞–∑</b>")
    await food_menu.send_call(call)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é "–ï–¥–∞ –Ω–∞ –∑–∞–∫–∞–∑"
@router.callback_query(F.data == "back_main")
async def start(call: CallbackQuery):
    await call.message.answer("–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>")
    await main_menu.send_call(call)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ —Ç–∏–ø—É"
@router.callback_query(F.data == "food_type")
async def food_type(call: CallbackQuery):
    await call.message.answer("–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª <b>–ü–æ —Ç–∏–ø—É</b>")
    await food_type_menu.send_call(call)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é "–ü–æ —Ç–∏–ø—É"
@router.callback_query(F.data == "back_food")
async def bach_food(call: CallbackQuery):
    await call.message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é <b>–ï–¥–∞ –Ω–∞ –∑–∞–∫–∞–∑</b>")
    await food_menu.send_call(call)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ –∫—É—Ö–Ω–µ"
@router.callback_query(F.data == "kitchen")
async def food_type(call: CallbackQuery):
    await call.message.answer("–í—ã –ø–µ—Ä–µ—à–ª–∏ –∫ –≤—ã–±–æ—Ä—É <b>–ü–æ –∫—É—Ö–Ω–µ</b>")
    await to_kitchen_menu.send_call(call)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é"
@router.callback_query(F.data == "appointment")
async def food_type(call: CallbackQuery):
    await call.message.answer("–í—ã –ø–µ—Ä–µ—à–ª–∏ –∫ –≤—ã–±–æ—Ä—É <b>–ü–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é</b>")
    await appointment_menu.send_call(call)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ì–æ—Ç–æ–≤–∞—è –µ–¥–∞"
@router.callback_query(F.data == "ready_made_food")
async def food_type(call: CallbackQuery):
    await call.message.answer("–í—ã –ø–µ—Ä–µ—à–ª–∏ –∫ –≤—ã–±–æ—Ä—É <b>–ì–æ—Ç–æ–≤–æ–π –µ–¥—ã</b>")
    await ready_made_food_menu.send_call(call)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥–ª—É—à–µ–∫
@router.callback_query(F.data == "plug")
async def food_type(call: CallbackQuery):
    await call.message.answer("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.\n"
                              "–î–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª —Å–∫–æ—Ä–æ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è.\n"
                              "–ê–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–¥–µ–ª - –ï–¥–∞ –Ω–∞ –∑–∞–∫–∞–∑"")")
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–∑—ã–≤—ã"
@router.callback_query(F.data == "reviews")
async def food_type(call: CallbackQuery):
    await call.message.answer("–ü–æ–∫–∞ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–µ –Ω—É–∂–µ–Ω")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
@router.callback_query(F.data == "feedback")
async def food_type(call: CallbackQuery):
    await call.message.answer("üòä–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∞—à–∏–º –æ—Ç–∑—ã–≤–∞–º –∏ –ª—é–±–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏!\n"
                              "üì©–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –∑–∞–º–µ—á–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ—Å–ª–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n"
                              "–ï—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –æ—à–∏–±–∫—É, –ø—Ä–∏–ª–æ–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ.\n"
                              "–ú—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —á–∏—Ç–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å—Ç—Ä–µ–º–∏–º—Å—è —Å–¥–µ–ª–∞—Ç—å –Ω–∞—à —Å–µ—Ä–≤–∏—Å –µ—â–µ –ª—É—á—à–µ.")